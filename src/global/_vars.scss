$white: #ffffff;
$black: #000000;
$grey: #e8e8e8;
$error: rgb(255, 101, 101);
$success: rgb(168, 208, 141);
$yellow: #FAE603;

$regular: "MontserratRegular";
$bold: "MontserratBold";
$title: "RampantOneRegular";

$transition: all 0.3s ease-out;

$breakpoints: (
  "small": 767px,
  "medium": 992px,
  "large": 1200px,
  "extralarge": 1366px,
) !default;

@mixin respond-to($breakpoint) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {
    // Prints a media query based on the value
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  }

  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}

@mixin icon {
  width: 30px;
  height: 30px;
  border: none;
  background-color: transparent;
  padding: 5px;
  box-shadow: rgba(100, 100, 111, 0.2) 0 1px 5px 0;
  border-radius: 5px;
  cursor: pointer;
  transition: $transition;

  svg {
    width: 20px;
    height: 20px;
  }

  &:hover,
  &:active {
    background-color: $black;
    color: $white;
    transition: $transition;
  }
}

@mixin buttonColor($background, $text) {
  font-size: 1.2rem;
  color: $text;
  padding: 1rem;
  background-color: $background;
  border: none;
  border-radius: 0.5rem;
  cursor: pointer;
  text-transform: capitalize;
  box-shadow: rgba(100, 100, 111, 0.2) 0 7px 29px 0;
  transition: $transition;

  &:hover,
  &:active {
    background-color: $text;
    color: $background;
  }
}

@mixin input {
  display: flex;
  flex-direction: column;

  input, textarea {
    padding: 1rem;
    border: 3px dashed transparent;
    min-width: 300px;
    border-radius: 0.5rem;
    box-shadow: rgba(100, 100, 111, 0.4) 0 7px 29px 0;
    background-color: $white;

    &::placeholder {
      font-family: $regular;
      font-size: 0.75rem;
    }

    &:invalid {
      border-color: $black;
    }

    &:focus:invalid {
      box-shadow: rgba(100, 100, 111, 0.2) 0 7px 29px 0;
    }

    &:invalid + span {
      display: flex;
    }
  }

  label {
    font-size: 1rem;
    font-weight: bold;
    margin-bottom: 0.5rem;
  }

  span {
    display: none;
    margin-top: 0.75rem;
    font-size: 0.75rem;
  }
}

@keyframes rotating {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@mixin loading {
  animation: rotating 2s linear infinite;
}
